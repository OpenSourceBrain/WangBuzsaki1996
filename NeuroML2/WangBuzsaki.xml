<Lems xmlns="http://www.neuroml.org/lems/0.6"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.6 https://raw.github.com/LEMS/LEMS/master/Schemas/LEMS/LEMS_v0.6.xsd">

<!-- Definition in LEMS of a new ComponentType for the Wang & Buzsáki 1996 model in Wang XJ and Buzsáki Gy (1996) -->

<Include file="NeuroMLCoreDimensions.xml"/>

<ComponentType name="wangBuzsakiBasketCell"
               extends="baseCellMembPot"
               description="Cell based on Wang XJ and Buzsáki Gy (1996)">

        <!-- TODO: add synapses !!! -->

        <Parameter name="C" dimension="specificCapacitance"/>
        <Parameter name="v0" dimension="voltage"/>

        <!-- leak conductance -->
        <Parameter name="gL" dimension="conductanceDensity"/>
        <Parameter name="eL" dimension="voltage"/>
        <Parameter name="I_app" dimension="currentDensity"/>

        <!-- Na+ channel -->
        <Parameter name="gNa" dimension="conductanceDensity"/>
        <Parameter name="eNa" dimension="voltage"/>
        <Parameter name="alpham_scale" dimension="voltage"/>
        <Parameter name="alpham_midpoint" dimension="voltage"/>
        <Parameter name="betam_rate" dimension="per_time"/>
        <Parameter name="betam_midpoint" dimension="voltage"/>
        <Parameter name="betam_scale" dimension="voltage"/>
        <Parameter name="h_q" dimension="none"/>
        <Parameter name="alphah_rate" dimension="per_time"/>
        <Parameter name="alphah_midpoint" dimension="voltage"/>
        <Parameter name="alphah_scale" dimension="voltage"/>
        <Parameter name="betah_scale" dimension="voltage"/>
        <Parameter name="betah_midpoint" dimension="voltage"/>

        <!-- K+ channel -->
        <Parameter name="gK" dimension="conductanceDensity"/>
        <Parameter name="eK" dimension="voltage"/>
        <Parameter name="n_q" dimension="none"/>
        <Parameter name="alphan_scale1" dimension="voltage"/>
        <Parameter name="alphan_scale2" dimension="voltage"/>
        <Parameter name="alphan_midpoint" dimension="voltage"/>
        <Parameter name="betan_rate" dimension="per_time"/>
        <Parameter name="betan_midpoint" dimension="voltage"/>
        <Parameter name="betan_scale" dimension="voltage"/>

        <!-- Normalizing Constants -->
        <Constant name="MSEC" dimension="time" value="1 ms"/>
        <Constant name="MVOLT" dimension="voltage" value="1 mV"/>

        <Exposure name="V" dimension="voltage"/>
        <Exposure name="m" dimension="none"/>
        <Exposure name="h" dimension="none"/>
        <Exposure name="n" dimension="none"/>

        <Dynamics>

            <StateVariable name="V" dimension="votage" exposure="V"/>
            <StateVariable name="m" dimension="none" exposure="m"/>
            <StateVariable name="h" dimension="none" exposure="h"/>
            <StateVariable name="n" dimension="none" exposure="n"/>

            <!-- baseCellMembPot compatibility -->
            <DerivedVariable name="v" dimension="none" value="V/MVOLT" exposure="v"/>

            <!-- chanel kinetics -->
            <DerivedVariable name="alpham" dimension="none" value="((v-alpham_midpoint)/alpham_scale)/(exp((v-alpham_midpoint)/alpham_scale)-1)"/>
            <DerivedVariable name="betam" dimension="none" value="betam_rate*exp((v-betam_midpoint)/(betam_scale))"/>
            <DerivedVariable name="alphah" dimension="none" value="alphah_rate*exp((v-alphah_midpoint)/(alphah_scale))"/>
            <DerivedVariable name="betah" dimension="none" value="1/(exp((v-betah_midpoint)/betah_scale)+1)"/>
            <DerivedVariable name="alphan" dimension="none" value="((v-alphan_midpoint)/alphan_scale1)/(exp((v-alphan_midpoint)/alphan_scale2)-1)"/>
            <DerivedVariable name="betan" dimension="none" value="betan*exp((v-betan)/(betan_scale))"/>

            <DerivedVariable name="m" dimension="none" value="alpham/(alpham+betam)"/>

            <!-- TODO: implement synaptic currents -->
            <TimeDerivative variable="V" value="(-gL*(v-eL)-gNa*m^3*h*(v-eNa)-gK*n^4*(v-eK)+I_app)/C"/>
            <TimeDerivative variable="h" value="h_q*(alphah*(1-h)-betah*h)"/>
            <TimeDerivative variable="n" value="n_q*(alphan*(1-n)-betan*n)"/>

            <OnStart>
                <StateAssignment variable="V" value="v0"/>
                <StateAssignment variable="h" value="alphah/(alphah+betah)"/>
                <StateAssignment variable="n" value="aplhan/(alphan+betan)"/>
            </OnStart>

        </Dynamics>

    </ComponentType>

</Lems>
